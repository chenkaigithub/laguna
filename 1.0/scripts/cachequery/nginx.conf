user  nginx;
worker_processes  10;

error_log  /var/log/nginx/error.log error;
#pid        /var/log/nginx/nginx.pid;


events {
    worker_connections  1024;
}

http {
    #include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main_log_fmt  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  cache_log_fmt  '$remote_addr $remote_user $upstream_cache_status [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main_log_fmt;
    access_log  /var/log/nginx/cache.log  cache_log_fmt;
    proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
    keepalive_requests 1000000;
    keepalive_timeout 200000;
    proxy_read_timeout 200000;
    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
    application/atom+xml text/javascript;
    # caching options
    proxy_cache_path /var/cache/tomnginx levels=1:2 keys_zone=my-cache:100m max_size=10000m inactive=600m;
    proxy_temp_path /var/cache/tomtmp;

	server {
       	listen 80;
        #root /data/up1;

        location / {
            resolver 8.8.8.8;
            proxy_pass 	http://s2.youtube.com;
        }
        location /clientaccesspolicy {
            #ideally, we should use host from whatever comes back from netflix video server
            #but this will do for now.
            resolver 		    8.8.8.8;
            proxy_pass 	            http://108.175.41.164;
            proxy_http_version      1.1;
        }
        location @ytbvid1 {
    	    proxy_pass              http://r2---sn-5uaeznlk.googlevideo.com;
	    }
	    location @ytbvid2 {
    	    proxy_pass              http://r13---sn-5uaeznl6.googlevideo.com;
	    }
	    location @ytbvid3 {
    	    proxy_pass              http://r6---sn-5uaezney.googlevideo.com;
	    }
	    location @ytbvid4 {
    	    proxy_pass              http://r5---sn-5uaeznlz.googlevideo.com;
	    }
	    location @ytbvid5 {
    	    proxy_pass              http://r4---sn-a5m7zu7z.googlevideo.com;
	    }
	    location @ytbvid6 {
    	    proxy_pass              http://r1---sn-5uaeznls.googlevideo.com;
	    }
	    location @ytbvid7 {
    	    proxy_pass              http://r6---sn-5uaezner.googlevideo.com;
	    }
	    location @ytbvid8 {
    	    proxy_pass              http://r6---sn-hp576nel.googlevideo.com;
	    }
	    location @ytbvid9 {
    	    proxy_pass              http://s2.youtube.com;
	    }
        location /crossdomain {
            #ideally, we should use host from whatever comes back from /videoplayback?
            #but this will do for now.
            resolver                8.8.8.8;
            try_files               @ytbvid1 @ytbvid2 @ytbvid3 @ytbvid4 @ytbvid5 @ytbvid6 @ytbvid7 @ytbvid8 @ytbvid9;
            proxy_http_version      1.1;
        }
        location /ccur/ {
                  location ~ (?P<ccursvc>^/ccur(/[^/]*)*)/tcshost/(?P<ccurhost>[^/]+)/tcskey(?P<ccurid>/[^/]+)(?P<ccurmisc>/[^/]+)/tcsopt/(?P<ccuropt>[^/]+)/tcsosig(?P<ccurourl>/.+)$ {
                  #location ~ /ccur/([^/]+)/(?P<ccursvc>[^/]+)/tcshost/(?P<ccurhost>[^/]+)/tcskey(?P<ccurid>/[^/]+)(?P<ccurmisc>/[^/]+)/tcsopt/(?P<ccuropt>[^/]+)/tcsosig(?P<ccurourl>/.+)$ {
                      resolver                8.8.8.8;
                      set $ccurtype           $1;
                      rewrite                 ^.*$ $ccurourl break;
                      proxy_pass              http://$ccurhost;
                      proxy_set_header        Connection "keep-alive";
                      proxy_http_version      1.1;
                      proxy_cache_key         $ccurtype-$ccursvc-$ccurid-$ccurmisc;
                      proxy_cache             my-cache;
                      #proxy_ignore_headers    X-Accel-Expires Expires Cache-Control Set-Cookie;
                      proxy_ignore_headers    Cache-Control Expires Set-Cookie;
                      proxy_cache_valid       200  1d;
                      proxy_cache_use_stale   error timeout invalid_header updating
                                             http_500 http_502 http_503 http_504;
                      add_header 'Access-Control-Allow-Origin' 'null';
                      add_header 'Access-Control-Allow-Credentials' 'true';

                 } 
         }
    }      
}

